#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверкаНаОтображениеКнопок();
КонецПроцедуры 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьТаблицуДоступностьДокументовПользователям();
	ЗаполнитьТаблицуУстановкаДоступности();
КонецПроцедуры

#КонецОбласти


//////////////////////////////////////////


#Область ОбработчикиСобытийЭлементовФормы
&НаКлиенте
Процедура ПользователиПриИзменении(Элемент)
	ПроверкаНаОтображениеКнопок(); 
КонецПроцедуры      

&НаКлиенте
Процедура ПользователиПользовательПриИзменении(Элемент)
	
	Объект.ДоступностьДокументовПользователям.Очистить();
	УстановкаДоступности.Очистить();
	ЗаполнитьТаблицуДоступностьДокументовПользователям();
	ЗаполнитьТаблицуУстановкаДоступности();

КонецПроцедуры

&НаКлиенте
Процедура ПользователиПередУдалением(Элемент, Отказ)
	УдалениеПользователейИзТаблицы(Элемент.ТекущиеДанные.Пользователь);
КонецПроцедуры


#КонецОбласти


//////////////////////////////////////////


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Подбор(Команда)    
	ПараметрыФормы = Новый Структура(); 
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);  
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка",
		ПараметрыФормы,
		ЭтаФорма,,,,
		Новый ОписаниеОповещения("ВыборЭлементовЗавершение",ЭтаФорма),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры 

&НаКлиенте
Процедура Далее(Команда)
	ПоказатьВторуюСтраницу();    
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ПоказатьПервуюСтраницу();	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУстановкуДоступности(Команда)
	ЗаполнитьУстановкуДоступностиСервер();
КонецПроцедуры 

#КонецОбласти


//////////////////////////////////////////


#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ВыборЭлементовЗавершение(СписокПользователей, ДополнительныеПараметры) Экспорт
	Если СписокПользователей = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого Пользователь Из СписокПользователей Цикл
		Объект.Пользователи.Добавить().Пользователь = Пользователь;
	КонецЦикла;	
	
	Объект.ДоступностьДокументовПользователям.Очистить();
	УстановкаДоступности.Очистить();
	ЗаполнитьТаблицуДоступностьДокументовПользователям();
	ЗаполнитьТаблицуУстановкаДоступности();
	
	ПроверкаНаОтображениеКнопок();
	
КонецПроцедуры   

&НаСервере
Процедура ВыполнитьЗаполнениеПрав()
	Для Каждого СтрокаДокумента Из УстановкаДоступности Цикл   
		
			Для Каждого СтрокаПользователя Из Объект.Пользователи Цикл
				
				ПользовательИнфБ = ПользователиИнформационнойБазы.
					НайтиПоУникальномуИдентификатору(СтрокаПользователя.Пользователь.ИдентификаторПользователяИБ);
				ИмяКолонкиПользователя = СтрЗаменить(Строка(СтрокаПользователя.Пользователь), " ", "");
				Попытка
					СтрокаДокумента[ИмяКолонкиПользователя] = ПравоДоступа("Чтение", Метаданные.Документы[СтрокаДокумента.Документ], 
					ПользовательИнфБ);  
				Исключение
					СтрокаДокумента[ИмяКолонкиПользователя] = Ложь;
				КонецПопытки;
				
			КонецЦикла;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуУстановкаДоступности()
	
	СоздатьКолонкиТаблицыУстановкаДоступности();
	ЗаполнитьДаннымиТаблицуУстановкаДоступности();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКолонкиТаблицыУстановкаДоступности()	
	нРеквизиты = Новый Массив;
	Для Каждого СтрокаПользователя Из Объект.Пользователи Цикл   
		Пользователь = УбратьПробелыУПользователя(СтрокаПользователя.Пользователь);
		
		УжеЕстьРеквизит = Ложь;
		
		РеквизитыТаблицы = ПолучитьРеквизиты("УстановкаДоступности");
		
		Для Каждого Реквизит Из РеквизитыТаблицы Цикл
			 ИмяРеквизита = Реквизит.Имя;	
			 Если ИмяРеквизита = Пользователь Тогда
				УжеЕстьРеквизит = Истина;
			 КонецЕсли;
		 КонецЦикла; 
		 
		 Если Не УжеЕстьРеквизит Тогда 
			 	нРеквизиты.Добавить(Новый РеквизитФормы(Пользователь, 
			Новый ОписаниеТипов("Булево"), 
			"УстановкаДоступности", 
			Пользователь));
		КонецЕсли; 
		
	КонецЦикла;
	
	ИзменитьРеквизиты(нРеквизиты);
	
	Для Каждого СтрокаПользователя Из Объект.Пользователи Цикл   
		Пользователь = УбратьПробелыУПользователя(СтрокаПользователя.Пользователь);
		
		Если Элементы.Найти("УстановкаДоступности" + Пользователь) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		
		нЭлемент = Элементы.Добавить("УстановкаДоступности" + Пользователь, 
		Тип("ПолеФормы"), 
		Элементы.УстановкаДоступности); 
		нЭлемент.Вид 				 = ВидПоляФормы.ПолеФлажка; 
		нЭлемент.ПутьКДанным = СтрШаблон("УстановкаДоступности.%1", Пользователь); 
		нЭлемент.Заголовок 	 = СтрокаПользователя.Пользователь;
	КонецЦикла;

КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьПервуюСтраницу()	
	Элементы.Далее.Видимость = Истина;   
	Элементы.Пользователи.Видимость = Истина;
	Элементы.Назад.Видимость = Ложь;
	Элементы.УстановкаДоступности.Видимость = Ложь;
КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьВторуюСтраницу()
	Элементы.Далее.Видимость = Ложь;   
	Элементы.Пользователи.Видимость = Ложь;
	Элементы.Назад.Видимость = Истина; 
	Элементы.УстановкаДоступности.Видимость = Истина;
КонецПроцедуры 

&НаКлиенте
Процедура ПроверкаНаОтображениеКнопок()
	Если Объект.Пользователи.Количество() <> 0 Тогда
		Элементы.Далее.Видимость = Истина;
	Иначе 
		Элементы.Далее.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры 


&НаСервере
Процедура ЗаполнитьУстановкуДоступностиСервер()
	
	Перем ПользовательИнфБ, стрДоступностиПользователя, СтрокаДокумента, СтрокаПользователя;
	
	Для Каждого СтрокаДокумента Из УстановкаДоступности Цикл   
		
		Для Каждого СтрокаПользователя Из Объект.Пользователи Цикл
			стрДоступностиПользователя = Объект.ДоступностьДокументовПользователям.Добавить();
			
			ПользовательИнфБ = ПользователиИнформационнойБазы.
			НайтиПоУникальномуИдентификатору(СтрокаПользователя.Пользователь.ИдентификаторПользователяИБ);
			
			стрДоступностиПользователя.Пользователь = СтрокаПользователя.Пользователь;
			стрДоступностиПользователя.Документ			= СтрокаДокумента.Документ;
			Попытка
				стрДоступностиПользователя.Доступен = ПравоДоступа("Чтение", Метаданные.Документы[СтрокаДокумента.Документ], 
				ПользовательИнфБ);  
			Исключение
				стрДоступностиПользователя.Доступен = Ложь;
			КонецПопытки;
			
		КонецЦикла;		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДоступностьДокументовПользователям()
	
	Перем Документ, ПользовательИнфБ, стрДоступностиПользователя, СтрокаПользователя;
	
	Если Объект.ДоступностьДокументовПользователям.Количество() = 0 Тогда
		
		Для Каждого Документ Из Метаданные.Документы Цикл			
			Для Каждого СтрокаПользователя Из Объект.Пользователи Цикл
				стрДоступностиПользователя = Объект.ДоступностьДокументовПользователям.Добавить();
				
				ПользовательИнфБ = ПользователиИнформационнойБазы.
				НайтиПоУникальномуИдентификатору(СтрокаПользователя.Пользователь.ИдентификаторПользователяИБ);
				
				стрДоступностиПользователя.Пользователь = СтрокаПользователя.Пользователь;
				стрДоступностиПользователя.Документ			= Документ.Имя;
				Попытка
					стрДоступностиПользователя.Доступен = ПравоДоступа("Чтение", Документ, 
					ПользовательИнфБ);  
				Исключение
					стрДоступностиПользователя.Доступен = Ложь;
				КонецПопытки;
				
			КонецЦикла;
			
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиТаблицуУстановкаДоступности()   
	Если УстановкаДоступности.Количество() <> 0 Тогда
		Возврат;
	КонецЕсли;
	
		
	Буф = "";
	Для Каждого СтрокаДоступности Из Объект.ДоступностьДокументовПользователям Цикл
		Если Буф <> СтрокаДоступности.Документ Тогда 
			нСтрока = УстановкаДоступности.Добавить();
			нСтрока.Документ = СтрокаДоступности.Документ; 
			Буф = СтрокаДоступности.Документ; 
		КонецЕсли;
		
		нСтрока[УбратьПробелыУПользователя(СтрокаДоступности.Пользователь)] = СтрокаДоступности.Доступен; 
	КонецЦикла;
КонецПроцедуры  

&НаСервереБезКонтекста
Функция УбратьПробелыУПользователя(Пользователь) 
	Возврат СтрЗаменить(Строка(Пользователь), " ", "");	
КонецФункции

&НаСервере
Процедура УдалениеПользователейИзТаблицы(Пользователь) 
	Если Пользователь = Справочники.Пользователи.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	МассивУдаляемых = Новый Массив; 
	ИмяПользователя =  УбратьПробелыУПользователя(Пользователь);	  
			
	Элементы.Удалить(Элементы["УстановкаДоступности" + ИмяПользователя]);
КонецПроцедуры


#КонецОбласти


